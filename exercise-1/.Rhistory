# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 1000/puppie_price
# Exercise 1: practice with basic R syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- "Beijing"
# Assign your name to the variable `my_name`
my_name <- "Robin"
# Assign your height (in inches) to a variable `my_height`
my_heigt <- 69
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 1
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppie_price <- 100
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- puppies * puppie_price
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- total_cost > 1000
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 1000/puppie_price
# Exercise 1: practice with basic R syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- "Beijing"
# Assign your name to the variable `my_name`
my_name <- "Robin"
# Assign your height (in inches) to a variable `my_height`
my_heigt <- 69
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 1
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppie_price <- 100
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- (puppies * puppie_price)
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- (total_cost > 1000)
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- (1000/puppie_price)
# Exercise 1: practice with basic R syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- "Beijing"
# Assign your name to the variable `my_name`
my_name <- "Robin"
# Assign your height (in inches) to a variable `my_height`
my_heigt <- 69
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 1
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy_price <- 100
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- puppies * puppy_price
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- total_cost > 1000
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 1000/puppy_price
?max
source('D:/Systemdata/Desktop/Info201/ch6-functions/exercise-1/exercise.R')
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
print(max(round_1, round_2))
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
print(max(round_sum, sum_round))
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(string_1, string_2) {
if(abs(string_1 - string_2) >= min(string_1, string_2)) {
result <- TRUE
} else {
result <- FALSE
}
}
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long("hello","hi")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(string_1, string_2) {
length_1 <- nchar(string_1)
length_2 <- nchar(string_2)
if(abs(length_1 - length) >= min(length_1,length_2)) {
result <- TRUE
} else {
result <- FALSE
}
}
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long("hello","hi")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(string_1, string_2) {
length_1 <- nchar(string_1)
length_2 <- nchar(string_2)
if(abs(length_1 - length_2) >= min(length_1,length_2)) {
result <- TRUE
} else {
result <- FALSE
}
}
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long("hello","hi")
is_twice_as_long("hi","hello")
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
print(is_twice_as_long("hello","hi"))
print(is_twice_as_long("hi","hello"))
print(is_twice_as_long("hello","hello"))
print(is_twice_as_long("hello","hell"))
text <- c(1:100)
text <- text[c(T,F)]
p1 <- paste(text)
p2 <- paste(text, " ")
p2 <- paste(text, collapse=" ")
?paste
p3 <- paste(text, sep = " ")
p3 <- paste(p2, sep = " ")
p3 <- paste(p2, sep = ' ')
p3 <- paste(p2, sep = ' ', collapse = ' ')
p3 <- paste(p1, sep = ' ', collapse = ' ')
p3 <- paste(p1, collapse = ' ')
p3 <- paste(p1, sep = ' ')
install.packages("lintr")
install.packages("styler")
# Define a function `describe_difference` that takes in two strings. The
# function should return one of the following sentences as appropriate
#   "Your first string is longer by N characters"
#   "Your second string is longer by N characters"
#   "Your strings are the same length!"
describe_difference <- function(string_1, string_2) {
difference <- nchar(string_1) - nchar(string_2)
if(difference > 0) {
return(paste("Your first string is longer by ", difference, " characters"))
} else if(length_1 - length2 < 0) {
return(paste("Your second string is longer by ", difference, " characters"))
} else {
return("Your strings are the same length!")
}
}
# Call your `describe_difference` function by passing it different length strings
# to confirm that it works. Make sure to check all 3 conditions1
describe_difference("hello", "hi")
describe_difference("hello", "hello")
describe_difference("hi", "hello")
# Define a function `describe_difference` that takes in two strings. The
# function should return one of the following sentences as appropriate
#   "Your first string is longer by N characters"
#   "Your second string is longer by N characters"
#   "Your strings are the same length!"
describe_difference <- function(string_1, string_2) {
difference <- nchar(string_1) - nchar(string_2)
if(difference > 0) {
return(paste("Your first string is longer by ", difference, " characters"))
} else if(difference < 0) {
return(paste("Your second string is longer by ", difference, " characters"))
} else {
return("Your strings are the same length!")
}
}
# Call your `describe_difference` function by passing it different length strings
# to confirm that it works. Make sure to check all 3 conditions1
describe_difference("hello", "hi")
describe_difference("hello", "hello")
describe_difference("hi", "hello")
describe_difference("hi", "hello")
# Define a function `describe_difference` that takes in two strings. The
# function should return one of the following sentences as appropriate
#   "Your first string is longer by N characters"
#   "Your second string is longer by N characters"
#   "Your strings are the same length!"
describe_difference <- function(string_1, string_2) {
difference <- nchar(string_1) - nchar(string_2)
if(difference > 0) {
return(paste("Your first string is longer by ", difference, " characters"))
} else if(difference < 0) {
return(paste("Your second string is longer by ", 0 - difference, " characters"))
} else {
return("Your strings are the same length!")
}
}
describe_difference("hi", "hello")
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
install.packages("lintr")
styler:::style_active_file()
lintr::lint("exercise.R")
lintr::lint("exercise.R")
